什么是抽象工厂模式
   提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们的类      创建型模式
抽象工厂模式的优点
   1、最大的好处便是易于交换产品系列，由于具体工厂类，在一个应用中只需要在初始化的时候出现一次，这就使得改变一个应用的具体工厂变得非常容易，它只需要改变具体工厂即可使用不同产品配置。
   2、它让具体的创建实例过程与客户端分离，客户端是通过它们的抽象接口操作实例，产品的具体类名也被具体工厂的实现分离，不会出现在客户代码中。、

如果项目使用的是MySQL数据，现在如果需要更换为Oracle数据，为了灵活更换数据库，如何设计程序呢？

接下来通过抽象工厂模式模仿数据访问程序。


优点
   1、易于交换产品系列，由于具体工厂类，在一个应用中只需要在初始化的时候出现一次，这就使得改变一个应用的具体工厂变得非常容易，它只需要改变具体工厂即可使用不同的产品配置。
   2、它让具体的创建实例过程与客户端分离，客户端是通过它们的抽象接口操纵实例，产品的具体类名也被具体工厂的实现分离，不会出现在客户代码中。
缺点
   如果要增加一个项目表Project，那么就需要增加三个类，IProject，MySQLProject，OracleProject，还需要改动IFactory，MySQLFactory，OracleFactory才可以完全实现。这样是很糟糕的。

   编程是门艺术，这样大批量的改动，显然是非常丑陋的做法。
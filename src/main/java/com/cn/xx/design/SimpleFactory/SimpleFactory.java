package com.cn.xx.design.SimpleFactory;

/**
 * @Author: ldl
 * @Date: 2019/10/14 16:22
 * @Version 1.0
 * @Des:
 *     创建型模式之----简单工厂模式
 *     一、
 *     定义：由一个工厂对象决定创建出哪一种产品的种类
 *     设计原则：遵循单一职责，违背开闭原则
 *      二、
 *      使用场景：1，工厂类负责创建的对象比较少
 *               2，调用者只需要知道传入工厂类的参数，然后如何创建对象不需要关心
 *      三、
 *      使用步骤：1，创建抽象产品类&定义具体产品的公共接口
 *               2，创建具体产品类(继承抽象产品类)&定义生成的具体产品
 *               3，创建工厂类，通过创建方法根据传入不同参数从而创建不同具体产品的实例
 *               4，外界通过调用工厂类对象的方法，传入不同参数从而创建不同具体产品类的实例
 *
 *      四、
 *      优点：1，只需要传入一个正确的参数，就可以获取你所需要的对象无需知道其创建细节
 *      五、
 *      缺点：1，工厂类的职责相对过重，增加新的产品，需要修改工厂类的判断原则，违背开闭原则
 *
 */

/**
 * 抽象产品类，定义具体产品的公共接口
 */
public abstract class SimpleFactory {

    public abstract void produce();

}

https://www.cnblogs.com/adamjwh/p/9033547.html

什么是组合模式  结构性模式
    组合模式将对象组合成树形结构以表示部分-整体的层次结构，用户对单个对象和组合对象的使用具有一致性
    组合模式有两种不同的实现，分别为透明模式和安全模式
组合模式之透明模式
    透明模式是把组合使用的方法放到抽象类中，不管叶子对象还是树枝对象都有相同的结构，
    这样做的好处就是叶子节点和树枝节点对于外界没有区别，它们具备完全一致的行为接口。但因为Leaf类本身不具备add()、remove()方法的功能，所以实现它是没有意义的。
组合模式之安全模式
    安全模式是把树枝节点和树叶节点彻底分开，树枝节点单独拥有用来组合的方法，这种方法比较安全。但由于不够透明，所以树叶节点和树枝节点将不具有相同的接口，客户端的调用需要做相应的判断，带来了不便。
组合模式的应用
    何时使用
        想表达“部分-整体”层次结构（树形结构）时
        希望用户忽略组合对象与单个对象的不同，用户将统一的使用组合结构中的所有对象
    方法
        树枝和叶子实现统一接口，树枝内部组合该接口
    优点
        高层模块调用简单。一棵树形机构中的所有节点都是Component，局部和整体对调用者来说没有任何区别，高层模块不必关心自己处理的是单个对象还是整个组合结构。
        节点自由增加
    缺点
        使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒转原则
    使用场景
        维护和展示部分-整体关系的场景（如树形菜单、文件和文件夹管理）
        从一个整体中能够独立出部分模块或功能的场景